"""
Copyright (C) Blanclink, Inc.
---------------------------
m2s3: A mongodump straight to AWS-S3
Author: Alejandro Ricoveri <alejandro.ricoveri@blanclink.com>
---------------------------
S3 module:
~~~~~~~~~~~~~~
Backup files generated by mongodump on a S3 bucket
"""

import boto
from boto.s3.key import Key
import ntpath
from . import config, log


def backup_file(file_name):
    """
    Backup a file on S3

    :param file_name: full path to the file to be backed up
    """
    # AWS parameters from config
    aws_conf = config.get_entry('aws')
    aws_id = aws_conf['id']
    aws_key = aws_conf['access_key']

    # Connect to S3 service
    log.msg("Connecting to S3 service ...")
    if not aws_id or not aws_key:
        conn = boto.connect_s3()
    else:
        conn = boto.connect_s3(aws_access_key_id=aws_id,
                               aws_secret_access_key=aws_key)


    # If the destination bucket does not exist, create one
    try:
        bucket = conn.get_bucket('m2s3')
    except boto.exception.S3ResponseError:
        log.msg_warn("Bucket does not exist!, creating it...")
        bucket = conn.create_bucket('m2s3')

    # Create a new bucket key
    k = Key(bucket)

    # The key is the name of the file itself who needs to be stripped
    # from its full path
    key_name = ntpath.basename(file_name)
    k.key = key_name

    # Upload the file to Amazon
    log.msg("Backing up '{key_name}' on bucket ...".format(key_name=key_name))
    # It is import to encrypt the data on the server side
    k.set_contents_from_filename(file_name, encrypt_key=True)
    log.msg('Backup done on S3!')

